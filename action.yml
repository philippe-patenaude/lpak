name: 'lpak'
description: 'Creates a Love2d game executable from an lpak.json file.'
inputs:
  GAME_NAME:
    description: 'The name to give the build artifacts.'
    required: true
  RELEASE_VERSION:
    description: 'The build version.'
    required: true
  GAME_DIR:
    description: 'The directory relative to the project root where the lpak.json file is.'
    required: false
    default: ''
runs:
  using: "composite"
  steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      - name: Run lpak
        id: lpak
        working-directory: ./${{ inputs.GAME_DIR }}
        env:
          LPAK_VERSION: 1.1.4
        run: |
          wget "https://github.com/philippe-patenaude/lpak/archive/refs/tags/v$LPAK_VERSION.zip" -O lpak.zip
          unzip lpak.zip
          cd ./lpak-$LPAK_VERSION
          npm install
          cd ../
          node ./lpak-$LPAK_VERSION/index.js win32
          node ./lpak-$LPAK_VERSION/index.js osx
        shell: bash
      - name: Create release
        id: create_release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ github.token }}" # This token is provided by Actions, you do not need to create your own token
          automatic_release_tag: ${{ inputs.RELEASE_VERSION }}
          title: Release ${{ inputs.GAME_NAME }} ${{ inputs.RELEASE_VERSION }}
          draft: true
          prerelease: false
      - name: Upload Win32 build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ inputs.GAME_DIR }}release/win32/${{ inputs.GAME_NAME }}.zip
          asset_name: ${{ inputs.GAME_NAME }}_Win32_${{ inputs.RELEASE_VERSION }}.zip
          asset_content_type: application/zip
      - name: Upload OSX build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ inputs.GAME_DIR }}release/osx/${{ inputs.GAME_NAME }}.zip
          asset_name: ${{ inputs.GAME_NAME }}_OSX_${{ inputs.RELEASE_VERSION }}.zip
          asset_content_type: application/zip
      - name: Publish release
        uses: StuYarrow/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          id: ${{ steps.create_release.outputs.id }}
